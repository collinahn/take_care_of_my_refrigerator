# -*- coding: utf-8 -*-
"""can_cook_recipe(최종).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LONdaLJegDKhSQKhAhGcxccEmKDCf4VJ
"""

'''
pip install openpyxl pandas numpy konlpy gensim tqdm joblib scipy==1.12
'''

import pandas as pd
from ast import literal_eval
from model.constant import VAGUE_INGRED_CATEGORIES

# 내 재료 리스트
ingred_list = ['소고기다짐육', '양파', '파프리카', '팽이버섯', '깻잎', '간장', '사과식초', '백설탕', '다진마늘', '연겨자', '소금', '후추']

# 재료를 기반으로 현재 가능한 레시피 반환함수
def can_cook_recipe(my_ingred):
    # 데이터 로드
    data = pd.read_excel('./model/input_recipe2.xlsx')

    # 문자열 상태 변경(문자열 -> 리스트로)
    data['Recipe'] = data['Recipe'].apply(literal_eval)
    data['Tags'] = data['Tags'].apply(literal_eval)
    data['Ingredients'] = data['Ingredients'].apply(literal_eval)
    data['temp'] = data['Ingred'].apply(literal_eval)
    data['Ingred'] = data['Ingred'].apply(literal_eval)

    # 레시피 초기화
    recipe = data.copy()

    for i, ingredients in enumerate(recipe['Ingred']):
        del_list = []
        for my in my_ingred:
            # 1. my가 ingredients에 있다면 temp에서 삭제
            if my in ingredients:
                recipe.at[i, 'temp'] = [ing for ing in recipe.at[i, 'temp'] if ing != my]

            # 2. 대분류 처리 : my가 category에 있다면 키를 temp에서 삭제(ex. 돼지고기뒷다리살 보유 -> temp에서 돼지고기 삭제)
            elif any(my in values for values in VAGUE_INGRED_CATEGORIES.values()):
                for key, values in VAGUE_INGRED_CATEGORIES.items():
                    if my in values:
                        recipe.at[i, 'temp'] = [ing for ing in recipe.at[i, 'temp'] if ing != key]

            # 3. or 처리 : my가 or로 연결된 재료중 하나라면 temp에서 삭제
            elif any('or' in s for s in ingredients):
                # ingredients의 요소 중 'or'를 포함하는 요소가 있을 때
                for s in ingredients:
                    if 'or' in s:
                        # 'or'로 분리하여 확인
                        parts = [part.strip() for part in s.split('or')] # parts는 분리된 재료들 (ex. 채소(야채)or버섯-> 채소(야채), 버섯)
                        # 3.1. 분리된 요소(parts) 중 하나라도 my에 있다면 temp에서 삭제 (ex. 소주 보유 -> temp에서 소주or청주 삭제)
                        if my in parts:
                            recipe.at[i, 'temp'] = [ing for ing in recipe.at[i, 'temp'] if ing != s]

                        # 3.2. my가 category에 있고 그 키가 분리된 요소(parts)중에 있다면 temp에서 삭제 (ex. 팽이버섯 보유 -> temp에서 버섯or야채(채소) 삭제)
                        for part in parts:
                            if part in del_list:
                                recipe.at[i, 'temp'] = [ing for ing in recipe.at[i, 'temp'] if ing != s]

    recipe['loss'] = recipe['temp'].apply(len)

    # loss(부족한 재료 수)가 작은 순 정렬
    sorted_recipe = recipe.sort_values(by='loss')

    top_30 = sorted_recipe.head(30)
    return top_30[['ObjectId', 'temp', 'loss']]


print(can_cook_recipe(ingred_list))
